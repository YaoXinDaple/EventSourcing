// <auto-generated />
using System;
using EventSourcingBankAccount.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventSourcingBankAccount.Infrastructure.Migrations
{
    [DbContext(typeof(EventSourcingDbContext))]
    [Migration("20250919052953_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("EventSourcingBankAccount.Domain.Aggregates.BankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("账户ID");

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("账户持有人姓名");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT")
                        .HasComment("账户余额");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts", (string)null);
                });

            modelBuilder.Entity("EventSourcingBankAccount.Infrastructure.Data.EventStoreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("聚合根ID");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("事件数据（JSON格式）");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("事件类型");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasComment("事件时间戳");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER")
                        .HasComment("事件版本号");

                    b.HasKey("Id");

                    b.HasIndex("EventType")
                        .HasDatabaseName("IX_Events_EventType");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_Events_Timestamp");

                    b.HasIndex("AggregateId", "Version")
                        .IsUnique()
                        .HasDatabaseName("IX_Events_AggregateId_Version");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("EventSourcingBankAccount.Infrastructure.Data.SnapshotEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("聚合根ID");

                    b.Property<string>("SnapshotData")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("快照数据（JSON格式）");

                    b.Property<string>("SnapshotType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("快照类型");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasComment("快照时间戳");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER")
                        .HasComment("快照版本号");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_Snapshots_Timestamp");

                    b.HasIndex("AggregateId", "Version")
                        .IsUnique()
                        .HasDatabaseName("IX_Snapshots_AggregateId_Version");

                    b.HasIndex("AggregateId", "SnapshotType", "Timestamp")
                        .HasDatabaseName("IX_Snapshots_AggregateId_Type_Timestamp");

                    b.HasIndex("AggregateId", "SnapshotType", "Version")
                        .HasDatabaseName("IX_Snapshots_AggregateId_Type_Version");

                    b.ToTable("Snapshots", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
